require "#{File.dirname(__FILE__)}/rails-ext/generated_attribute_extended"
require "#{File.dirname(__FILE__)}/table"

module MyDomainGenerator
  # == Description
  # An object graph of a domain that consists of one or more tables. The domain
  # is generated by parsing an XML file. Only SQL Editor XML exports are supported.
  class Domain
    attr_reader :tables

    # Creates a new +Domain+.
    #
    # doc::
    #   An XML document that describes the domain. Write now only XML exports
    #   generated by SQL Editor are supported.
    #
    # tables::
    #   An array of table names in the domain to be generated. If none are 
    #   specified then all tables found in +doc+ will be generated.
    def initialize(doc, tables=[])
      doc.root.elements.each("SQLTable") { |e| tables << e.elements["name"].text } if tables.empty?
      
      @tables = Hash.new
      tables.each { |t| @tables[t.underscore.to_sym] = MyDomainGenerator::Table.new(doc.root.elements["SQLTable[name='#{t}']"]) }
      
      @tables.each do |k,v|
        v.references[:belongs_to].each { |r| @tables[r].references[:has_many] << k }
      end
    end
  end
end